temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_prediction_randomForest <- as.data.frame(predict(fit_randomForest, testset[,-6]))
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
}
fit_randomForest
fit_randomForest
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 20, nodedepth = 4)
prediction_linear <- data.frame()
testsetCopy_linear <- data.frame()
fit_linear_copy <- data.frame()
prediction_randomForest <- data.frame()
testsetCopy_randomForest <- data.frame()
fit_randomForest_copy <- data.frame()
result_temp_linear <- data.frame()
result_temp_randomForest <- data.frame()
for (i in 1:fold_num){
# remove rows with id i from dataframe to create training set
# select rows with id i to create test set
trainingset <- subset(data_network_database, id %in% list[-i])
testset <- subset(data_network_database, id %in% c(i))
# run a linear regression model
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 20, nodedepth = 4)
#fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_prediction_randomForest <- as.data.frame(predict(fit_randomForest, testset[,-6]))
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
}
# # add predictions and actual Sepal Length values
# result <- cbind(prediction, testsetCopy[, 1])
# names(result) <- c("Predicted", "Actual")
# result$Difference <- abs(result$Actual - result$Predicted)
#
# # As an example use Mean Absolute Error as Evalution
# summary(result$Difference)
fit_randomForest
View(prediction_linear)
fit_randomForest$predicted
for (i in 1:fold_num){
# remove rows with id i from dataframe to create training set
# select rows with id i to create test set
trainingset <- subset(data_network_database, id %in% list[-i])
testset <- subset(data_network_database, id %in% c(i))
# run a linear regression model
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 20, nodedepth = 4)
#fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_prediction_randomForest <- as.data.frame(predict(fit_randomForest$predicted, testset[,-6]))
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
}
fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
fit_randomForest
prediction_linear <- data.frame()
testsetCopy_linear <- data.frame()
fit_linear_copy <- data.frame()
prediction_randomForest <- data.frame()
testsetCopy_randomForest <- data.frame()
fit_randomForest_copy <- data.frame()
result_temp_linear <- data.frame()
result_temp_randomForest <- data.frame()
for (i in 1:fold_num){
# remove rows with id i from dataframe to create training set
# select rows with id i to create test set
trainingset <- subset(data_network_database, id %in% list[-i])
testset <- subset(data_network_database, id %in% c(i))
# run a linear regression model
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 20, nodedepth = 4)
#fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_prediction_randomForest <- as.data.frame(predict(fit_randomForest$predicted, testset[,-6]))
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
}
fit_randomForest
predict(fit_randomForest, testset[,-6])
a=predict(fit_randomForest, testset[,-6])
a$predicted
for (i in 1:fold_num){
# remove rows with id i from dataframe to create training set
# select rows with id i to create test set
trainingset <- subset(data_network_database, id %in% list[-i])
testset <- subset(data_network_database, id %in% c(i))
# run a linear regression model
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 20, nodedepth = 4)
#fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_rfsrc_predict <- predict(fit_randomForest, testset[,-6])
temp_prediction_randomForest <- as.data.frame(predict(temp_rfsrc_predict$predicted)
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
}
for (i in 1:fold_num){
# remove rows with id i from dataframe to create training set
# select rows with id i to create test set
trainingset <- subset(data_network_database, id %in% list[-i])
testset <- subset(data_network_database, id %in% c(i))
# run a linear regression model
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 20, nodedepth = 4)
#fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_rfsrc_predict <- predict(fit_randomForest, testset[,-6])
temp_prediction_randomForest <- as.data.frame(temp_rfsrc_predict$predicted)
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
}
i=1
trainingset <- subset(data_network_database, id %in% list[-i])
testset <- subset(data_network_database, id %in% c(i))
# run a linear regression model
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 20, nodedepth = 4)
#fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_rfsrc_predict <- predict(fit_randomForest, testset[,-6])
temp_prediction_randomForest <- as.data.frame(temp_rfsrc_predict$predicted)
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
prediction_linear <- data.frame()
testsetCopy_linear <- data.frame()
fit_linear_copy <- data.frame()
prediction_randomForest <- data.frame()
testsetCopy_randomForest <- data.frame()
fit_randomForest_copy <- data.frame()
result_temp_linear <- data.frame()
result_temp_randomForest <- data.frame()
for (i in 1:fold_num){
# remove rows with id i from dataframe to create training set
# select rows with id i to create test set
trainingset <- subset(data_network_database, id %in% list[-i])
testset <- subset(data_network_database, id %in% c(i))
# run a linear regression model
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 20, nodedepth = 4)
#fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_rfsrc_predict <- predict(fit_randomForest, testset[,-6])
temp_prediction_randomForest <- as.data.frame(temp_rfsrc_predict$predicted)
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
}
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup,
data = trainingset, ntree = 20, nodedepth = 4)
for (i in 1:fold_num){
# remove rows with id i from dataframe to create training set
# select rows with id i to create test set
trainingset <- subset(data_network_database, id %in% list[-i])
testset <- subset(data_network_database, id %in% c(i))
# run a linear regression model
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup,
data = trainingset, ntree = 20, nodedepth = 2)
#fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_rfsrc_predict <- predict(fit_randomForest, testset[,-6])
temp_prediction_randomForest <- as.data.frame(temp_rfsrc_predict$predicted)
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
}
for (i in 1:fold_num){
# remove rows with id i from dataframe to create training set
# select rows with id i to create test set
trainingset <- subset(data_network_database, id %in% list[-i])
testset <- subset(data_network_database, id %in% c(i))
# run a linear regression model
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup,
data = trainingset, ntree = 20, nodedepth = 10)
#fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_rfsrc_predict <- predict(fit_randomForest, testset[,-6])
temp_prediction_randomForest <- as.data.frame(temp_rfsrc_predict$predicted)
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
}
# # add predictions and actual Sepal Length values
# result <- cbind(prediction, testsetCopy[, 1])
# names(result) <- c("Predicted", "Actual")
# result$Difference <- abs(result$Actual - result$Predicted)
#
# # As an example use Mean Absolute Error as Evalution
# summary(result$Difference)
#
for (i in 1:fold_num){
# remove rows with id i from dataframe to create training set
# select rows with id i to create test set
trainingset <- subset(data_network_database, id %in% list[-i])
testset <- subset(data_network_database, id %in% c(i))
# run a linear regression model
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup,
data = trainingset, ntree = 20, nodedepth = 20)
#fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_rfsrc_predict <- predict(fit_randomForest, testset[,-6])
temp_prediction_randomForest <- as.data.frame(temp_rfsrc_predict$predicted)
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
}
# # add predictions and actual Sepal Length values
# result <- cbind(prediction, testsetCopy[, 1])
# names(result) <- c("Predicted", "Actual")
# result$Difference <- abs(result$Actual - result$Predicted)
#
# # As an
for (i in 1:fold_num){
# remove rows with id i from dataframe to create training set
# select rows with id i to create test set
trainingset <- subset(data_network_database, id %in% list[-i])
testset <- subset(data_network_database, id %in% c(i))
# run a linear regression model
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup,
data = trainingset, ntree = 20, nodedepth = 8)
#fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_rfsrc_predict <- predict(fit_randomForest, testset[,-6])
temp_prediction_randomForest <- as.data.frame(temp_rfsrc_predict$predicted)
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
}
for (i in 1:fold_num){
# remove rows with id i from dataframe to create training set
# select rows with id i to create test set
trainingset <- subset(data_network_database, id %in% list[-i])
testset <- subset(data_network_database, id %in% c(i))
# run a linear regression model
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup,
data = trainingset, ntree = 100, nodedepth = 4)
#fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_rfsrc_predict <- predict(fit_randomForest, testset[,-6])
temp_prediction_randomForest <- as.data.frame(temp_rfsrc_predict$predicted)
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
}
for (i in 1:fold_num){
# remove rows with id i from dataframe to create training set
# select rows with id i to create test set
trainingset <- subset(data_network_database, id %in% list[-i])
testset <- subset(data_network_database, id %in% c(i))
# run a linear regression model
fit_linear <- lm(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data=trainingset)
fit_randomForest <- rfsrc(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup,
data = trainingset, ntree = 1000, nodedepth = 4)
#fit_randomForest <- randomForest(SizeBackup ~ Week+DayOfWeek+StartTime+WorkFlowName+FileName+TimeBackup, data = trainingset, ntree = 100, mtry = 6, nodesize = 64)
temp_prediction_linear <- as.data.frame(predict(fit_linear, testset[,-6]))
temp_rfsrc_predict <- predict(fit_randomForest, testset[,-6])
temp_prediction_randomForest <- as.data.frame(temp_rfsrc_predict$predicted)
# append this iteration's predictions to the end of the prediction_linear data frame
prediction_linear <- rbind(prediction_linear , temp_prediction_linear)
prediction_randomForest <- rbind(prediction_randomForest , temp_prediction_randomForest)
# append this iteration's test set to the test set copy data frame
# keep only the Sepal Length Column
testsetCopy_linear <- rbind(testsetCopy_linear, as.data.frame(testset[,6]))
testsetCopy_randomForest <- rbind(testsetCopy_randomForest, as.data.frame(testset[,6]))
# fit_linear_copy <- cbind(fit_linear_copy, fit_linear)
cat("===========================================\n")
cat(sprintf("No.%d\n", i))
cat(sprintf("fit_linear coefficients:\n"))
print(fit_linear$coefficients)
result_temp_linear <- cbind(temp_prediction_linear, as.data.frame(testset[,6]))
names(result_temp_linear) <- c("Predicted", "Actual")
result_temp_linear$Difference <- abs(result_temp_linear$Actual - result_temp_linear$Predicted) ^ 2
cat(sprintf("Linear Model: The sum of the square of difference is %f\n",sum(result_temp_linear$Difference)))
result_temp_randomForest <- cbind(temp_prediction_randomForest, as.data.frame(testset[,6]))
names(result_temp_randomForest) <- c("Predicted", "Actual")
result_temp_randomForest$Difference <- abs(result_temp_randomForest$Actual - result_temp_randomForest$Predicted) ^ 2
cat(sprintf("Random Forest Model: The sum of the square of difference is %f\n",sum(result_temp_randomForest$Difference)))
}
